# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET    /                                controllers.Application.index
GET    /utru                            controllers.Application.login
POST   /session                         controllers.Application.loginauthenticate
GET    /init                            controllers.Application.init
GET    /initaccount                            controllers.Application.initaccount
GET    /initcloudtoolsetting            controllers.Application.initcloudtoolsetting
GET    /initmarketplaceaddons           controllers.Application.initmarketplaceaddons

# Authentication - HMAC
POST   /v1/auth                         controllers.Application.authenticate
#POST    /staleauth                 controllers.Application.staleauth
POST   /v1/accounts/content             controllers.Accounts.post
GET    /v1/accounts/:id                 controllers.Accounts.show(id: String)
# Nodes
GET    /v1/nodes                        controllers.Nodes.list
GET    /v1/nodes/:id                    controllers.Nodes.show(id: String)
POST   /v1/nodes/content                controllers.Nodes.post
POST   /v1/nodes/update                 controllers.Nodes.update
 
# Requests for Nodes 
GET    /v1/requests                     controllers.Requests.list()                          
GET    /v1/requests/:nodeid             controllers.Requests.show(nodeid: String)
POST   /v1/requests/content             controllers.Requests.post

# Logs for Nodes 
#just declare POST for testing
#GET   /v1/logs	   		    controllers.Logs.list()                          
#GET   /v1/logs/:nodeid		controllers.Logs.show(nodeid: String)
#GET   /v1/logs/index        controllers.Logs.socketindex

#Predefs
GET    /v1/predefs                      controllers.Predefs.list()
GET    /v1/predefs/:predefid            controllers.Predefs.show(predefid: String)

#PredefClouds
POST   /v1/predefclouds/content         controllers.PredefClouds.post
GET    /v1/predefclouds                 controllers.PredefClouds.list
GET    /v1/predefclouds/:pre_name       controllers.PredefClouds.show(pre_name: String)

#CloudDeployers
GET    /v1/cloudtools                   controllers.CloudTools.list()
GET    /v1/cloudtools/:cloud_toolname   controllers.CloudTools.show(cloud_toolname: String)

# AppDefns for Nodes                          
GET    /v1/appdefns                     controllers.AppDefns.list()
GET    /v1/appdefns/:nodeid/:id	        controllers.AppDefns.show(nodeid: String, id: String)
GET    /v1/appdefns/:nodeid             controllers.AppDefns.shown(nodeid: String)
POST   /v1/appdefns/content             controllers.AppDefns.post

# AppRequests for Nodes                          
GET    /v1/appreqs/:nodeid              controllers.AppReqs.show(nodeid: String)
POST   /v1/appreqs/content              controllers.AppReqs.post

# BoltDefns for Nodes                          
GET    /v1/boltdefns/:nodeid            controllers.BoltDefns.show(nodeid: String)
POST   /v1/boltdefns/content            controllers.BoltDefns.post

# BoltRequests for Nodes                          
GET    /v1/boltreqs/:nodeid             controllers.BoltReqs.show(nodeid: String)
POST   /v1/boltreqs/content             controllers.BoltReqs.post

# CloudToolSetting
GET    /v1/cloudtoolsettings            controllers.CloudToolSettings.list
GET    /v1/cloudtoolsettings/:id        controllers.CloudToolSettings.show(id: String)
POST   /v1/cloudtoolsettings/content    controllers.CloudToolSettings.post

#SshKeys
POST   /v1/sshkeys/content         controllers.SshKeys.post
GET    /v1/sshkeys                 controllers.SshKeys.list
GET    /v1/sshkeys/:pre_name       controllers.SshKeys.show(pre_name: String)

#MarketPlaces
POST   /v1/marketplaces/content         controllers.MarketPlaces.post
GET    /v1/marketplaces                 controllers.MarketPlaces.list
GET    /v1/marketplaces/:id       controllers.MarketPlaces.show(id: String)

#MarketPlaceAddons
POST   /v1/marketplaceaddons/content         controllers.MarketPlaceAddons.post
GET    /v1/marketplaceaddons/:id             controllers.MarketPlaceAddons.show(id: String)

# Map static resources from the /public folder to the /public path
GET    /assets/*file                    controllers.Assets.at(path="/public", file)
